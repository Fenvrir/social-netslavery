{"version":3,"file":"static/js/296.e0daa585.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-1/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","HOC/withMatch.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__q6Qpm\",\"content_feedback\":\"Post_content_feedback__tG+h-\",\"avatar\":\"Post_avatar__GgJhl\",\"content__user\":\"Post_content__user__Q481B\"};","import s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n\treturn (\r\n\t\t<div className={s.content__list}>\r\n\t\t\t<div className={s.content__user}>\r\n\t\t\t\t<div className={s.avatar}>\r\n\t\t\t\t\t<img src={props.avatar } alt=\"Avatar\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.item}>\r\n\t\t\t\t\t<p>{props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.content_feedback}>\r\n\t\t\t\t<span><button>Like</button></span>\r\n\t\t\t\t<span>{props.likesCount}</span>\r\n\t\t\t\t<span><button>Dislike</button></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content__btn\":\"MyPosts_content__btn__sWJ0A\",\"content__textArea\":\"MyPosts_content__textArea__tYF+z\"};","import Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../components/FormsControls/FormsControls\";\r\n\r\nconst maxLength_150 = maxLengthCreator(150);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.content__textArea}>\r\n        <Field component={Textarea} \r\n        validate={[required, maxLength_150]} \r\n        name={\"newPostText\"} rows=\"4\" cols=\"120\" />\r\n      </div>\r\n      <div className={s.content__btn}>\r\n        <button type=\"submit\">Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddPostForm);\r\n\r\nfunction MyPosts(props) {\r\n  const postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} avatar={p.avatar} />\r\n  ));\r\n\r\n  function onSubmit (formData) {\r\n    props.addPost(formData.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.post__block}>\r\n      <PostReduxForm \r\n      onSubmit={onSubmit}\r\n      />\r\n      {postsElements}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPost } from \"../../../redux/profile-reducer.js\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addNewPost: () => {\r\n//       dispatch(addPostActionCreator());\r\n//     },\r\n//     updateNewPostText: (text) => {\r\n//       dispatch(updateNewPostTextActionCreator(text));\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content__img\":\"Profile_content__img__X1TA-\",\"content__user\":\"Profile_content__user__6K5lf\",\"content__avatar\":\"Profile_content__avatar__gqI1P\",\"content__description\":\"Profile_content__description__LtWFS\",\"content__posts\":\"Profile_content__posts__flGXP\",\"content__list\":\"Profile_content__list__0SOpK\",\"item\":\"Profile_item__U0loT\",\"item_gold\":\"Profile_item_gold__CeBFn\",\"contacts\":\"Profile_contacts__Aalkx\"};","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n   const [editMode, setEditMode] = useState(false);\r\n   const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    const changeStatus = (ev) => {\r\n       setStatus(ev.target.value);\r\n       \r\n    }\r\n\r\n    const closeInput = () => {\r\n        toggleEditMode()\r\n        props.updateUserStatus(status);\r\n    }\r\n   \r\n        return (\r\n            <div>\r\n                <div>\r\n                    {editMode\r\n                    ? <input value={status}\r\n                        autoFocus={true}\r\n                        onBlur={closeInput}\r\n                        onChange={(ev) => {changeStatus(ev)}} /> \r\n                    : <span onDoubleClick={toggleEditMode}>{props.status}</span> }\r\n                </div>\r\n            </div>)\r\n}\r\n\r\nexport default ProfileStatus;","import ProfileStatus from \"../ProfileStatus/ProfileStatus\";\r\nimport s from \"./../Profile.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input,Textarea } from \"../../components/FormsControls/FormsControls\";\r\nimport style from \"./../../components/FormsControls/FormsControl.module.css\";\r\n\r\nconst ProfileForm = (props) => {\r\n\r\n  return (\r\n    <form className={s.content__description} \r\n      onSubmit={props.handleSubmit}>\r\n      {!props.isOwner && (\r\n        <div style={{ float: \"right\" }}>\r\n          <button >Save</button>\r\n        </div>\r\n      )}\r\n       {props.error && (\r\n        <div className={style.form_summary_error}>{props.error}</div>\r\n      )}\r\n      <ul>\r\n        <ProfileStatus\r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}\r\n        />\r\n        <li>\r\n          <b>Name:</b>\r\n          <Field\r\n            placeholder={props.profile.fullName}\r\n            name=\"fullName\"\r\n            component={Input}\r\n          />\r\n        </li>\r\n        <li>\r\n            <b>About me:\r\n                    <Field\r\n                      placeholder={props.profile.aboutMe}\r\n                      name=\"aboutMe\"\r\n                      component={Textarea}\r\n                    /></b>\r\n          </li>\r\n        {\r\n          <li>\r\n            <b>\r\n              Looking for a job:\r\n              <Field\r\n                name=\"lookingForAJob\"\r\n                component={\"input\"}\r\n                type={\"checkbox\"}\r\n              />\r\n            </b>\r\n          </li>\r\n        }\r\n          <li>\r\n            <b>My professional skills: \r\n                    <Field\r\n                      placeholder={props.profile.lookingForAJobDescription}\r\n                      name=\"lookingForAJobDescription\"\r\n                      component={Textarea}\r\n                    /></b>\r\n          </li>\r\n      </ul>\r\n      <div className={s.contacts}>\r\n        <b>Contacts: </b>{\" \"}\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          return <div>\r\n            <b>{key}</b> <Field\r\n              key={key}\r\n              placeholder={props.profile.contacts[key]}\r\n              name={\"contacts.\" + key.toLocaleLowerCase()}\r\n              component={Input}\r\n            />\r\n        </div>\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataForm = reduxForm({ form: \"edit-profile\" })(ProfileForm);\r\n\r\nexport default ProfileDataForm;\r\n","import ProfileStatus from \"./../ProfileStatus/ProfileStatus\";\r\nimport s from \"./../Profile.module.css\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nlet defaultAvatar =\r\n  \"https://www.kindpng.com/picc/m/22-223941_transparent-avatar-png-male-avatar-icon-transparent-png.png\";\r\n\r\nfunction ProfileInfo(props) {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(!editMode);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={s.content__user}>\r\n      <div className={s.content__avatar}>\r\n        <img\r\n          style={{ maxWidth: \"250px\" }}\r\n          alt=\"Avatar\"\r\n          src={\r\n            props.profile.photos.large\r\n              ? props.profile.photos.large\r\n              : defaultAvatar\r\n          }\r\n        ></img>\r\n        <div>\r\n          {props.isOwner && (\r\n            <input type={\"file\"} onChange={(e) => onMainPhotoSelected(e)} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {editMode \r\n        ? <ProfileDataForm onSubmit={onSubmit}  status={props.status}\r\n            initialValues={props.profile}\r\n            updateUserStatus={props.updateUserStatus} profile={props.profile}/> \r\n        : <ProfileData   status={props.status}\r\n           updateUserStatus={props.updateUserStatus}  goToEditMode={() => setEditMode(!editMode)} profile={props.profile}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst ProfileData = (props) => {\r\n  Object.filter = (obj, predicate) => \r\n  Object.keys(obj)\r\n        .filter( key => predicate(obj[key]) )\r\n        .reduce( (res, key) => (res[key] = obj[key], res), {} );\r\n        \r\nlet contacts = Object.filter(props.profile.contacts, contact => contact !== null);\r\n\r\n  return (<div className={s.content__description}>\r\n            {!props.isOwner && <div style={{float: \"right\"}}> \r\n              <button onClick={props.goToEditMode}>Edit</button> \r\n            </div>}\r\n            <ul>\r\n            <ProfileStatus\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n              />\r\n              <li> \r\n                <b>\r\n                  Name: {props.profile.fullName}\r\n                </b>\r\n              </li>\r\n              {props.profile.aboutMe && \r\n              <li> \r\n                <b>\r\n                  About: {props.profile.aboutMe}\r\n                </b>\r\n                </li>}\r\n              {<li>\r\n                  <b>\r\n                    Looking for a job: {props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n                  </b>\r\n              </li>}\r\n              <li>\r\n                  <b>\r\n                    My professional skills: {props.profile.lookingForAJobDescription }\r\n                  </b>\r\n              </li>\r\n            </ul>\r\n            <div className={s.contacts}>\r\n              <b>Contacts: </b> {Object.keys(contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={contacts[key]}/>\r\n              })}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>: <b>{contactValue}</b></div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import Preloader from \"../Users/Preloader\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nfunction Profile(props) {\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.content__container}>\r\n        <ProfileInfo {...props}/>\r\n      <div className={s.content__posts}>\r\n        <MyPostsContainer store={props.store} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { withMatch } from \"../../HOC/withMatch\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match \r\n    ? this.props.match.params.userId \r\n    : this.props.authorizedUserId;\r\n  if(!userId) {\r\n    this.props.history.push('/login');\r\n  }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.refreshProfile();\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState){\r\n  //     this.refreshProfile();\r\n  // }\r\n \r\n\r\n  render() {\r\n    return <Profile {...this.props} \r\n            isOwner={this.props.match === null}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateUserStatus={this.props.updateUserStatus}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile}\r\n           /> \r\n          }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId\r\n \r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n  withMatch,\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { useMatch } from \"react-router-dom\";\r\n\r\n\r\nexport const withMatch = (Component) => {\r\n\r\n    const MatchComponent = (props) => {\r\n                let match = useMatch('/profile/:userId/');\r\n                return (\r\n                  <Component {...props} match={match}/>\r\n                )\r\n        }\r\n\r\n    return MatchComponent;\r\n}\r\n\r\n"],"names":["props","className","s","src","avatar","alt","message","likesCount","maxLength_150","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","rows","cols","type","postsElements","posts","map","p","id","formData","addPost","newPostText","connect","state","profilePage","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","value","autoFocus","onBlur","updateUserStatus","onChange","ev","target","changeStatus","onDoubleClick","isOwner","style","float","error","profile","placeholder","fullName","Input","aboutMe","lookingForAJobDescription","Object","keys","contacts","key","toLocaleLowerCase","ProfileData","filter","obj","predicate","reduce","res","contact","onClick","goToEditMode","lookingForAJob","Contact","contactTitle","contactValue","maxWidth","photos","large","e","files","length","savePhoto","onMainPhotoSelected","saveProfile","then","initialValues","store","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","React","compose","auth","Component","useMatch","withAuthRedirect"],"sourceRoot":""}