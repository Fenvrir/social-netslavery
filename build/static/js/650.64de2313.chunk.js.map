{"version":3,"file":"static/js/650.64de2313.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","webpack://react-1/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","HOC/withMatch.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__q6Qpm\",\"content_feedback\":\"Post_content_feedback__tG+h-\",\"avatar\":\"Post_avatar__GgJhl\",\"content__user\":\"Post_content__user__Q481B\"};","import s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n\treturn (\r\n\t\t<div className={s.content__list}>\r\n\t\t\t<div className={s.content__user}>\r\n\t\t\t\t<div className={s.avatar}>\r\n\t\t\t\t\t<img src={props.avatar } alt=\"Avatar\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.item}>\r\n\t\t\t\t\t<p>{props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.content_feedback}>\r\n\t\t\t\t<span><button>Like</button></span>\r\n\t\t\t\t<span>{props.likesCount}</span>\r\n\t\t\t\t<span><button>Dislike</button></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content__btn\":\"MyPosts_content__btn__sWJ0A\",\"content__textArea\":\"MyPosts_content__textArea__tYF+z\"};","import Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../components/FormsControls/FormsControls\";\r\n\r\nconst maxLength_150 = maxLengthCreator(150);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.content__textArea}>\r\n        <Field component={Textarea} \r\n        validate={[required, maxLength_150]} \r\n        name={\"newPostText\"} rows=\"4\" cols=\"120\" />\r\n      </div>\r\n      <div className={s.content__btn}>\r\n        <button type=\"submit\">Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddPostForm);\r\n\r\nfunction MyPosts(props) {\r\n  const postsElements = props.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} avatar={p.avatar} />\r\n  ));\r\n\r\n  function onSubmit (formData) {\r\n    props.addPost(formData.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.post__block}>\r\n      <PostReduxForm \r\n      onSubmit={onSubmit}\r\n      />\r\n      {postsElements}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPost } from \"../../../redux/profile-reducer.js\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n      posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addNewPost: () => {\r\n//       dispatch(addPostActionCreator());\r\n//     },\r\n//     updateNewPostText: (text) => {\r\n//       dispatch(updateNewPostTextActionCreator(text));\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n   const [editMode, setEditMode] = useState(false);\r\n   const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    const changeStatus = (ev) => {\r\n       setStatus(ev.target.value);\r\n       \r\n    }\r\n\r\n    const closeInput = () => {\r\n        toggleEditMode()\r\n        props.updateUserStatus(status);\r\n    }\r\n   \r\n        return (\r\n            <div>\r\n                <div>\r\n                    {editMode\r\n                    ? <input value={status}\r\n                        autoFocus={true}\r\n                        onBlur={closeInput}\r\n                        onChange={(ev) => {changeStatus(ev)}} /> \r\n                    : <span onDoubleClick={toggleEditMode}>{props.status}</span> }\r\n                </div>\r\n            </div>)\r\n}\r\n\r\nexport default ProfileStatus;","// extracted by mini-css-extract-plugin\nexport default {\"content__container\":\"Profile_content__container__ZtaeQ\",\"content__img\":\"Profile_content__img__X1TA-\",\"content__user\":\"Profile_content__user__6K5lf\",\"content__avatar\":\"Profile_content__avatar__gqI1P\",\"content__description\":\"Profile_content__description__LtWFS\",\"content__posts\":\"Profile_content__posts__flGXP\",\"content__list\":\"Profile_content__list__0SOpK\",\"item\":\"Profile_item__U0loT\",\"item_gold\":\"Profile_item_gold__CeBFn\"};","import Preloader from \"../Users/Preloader\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport s from \"./Profile.module.css\";\r\nlet defaultAvatar = \"https://www.kindpng.com/picc/m/22-223941_transparent-avatar-png-male-avatar-icon-transparent-png.png\";\r\n\r\nfunction Profile(props) {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.content__container}>\r\n      <div>\r\n        <img\r\n          className={s.content__img}\r\n          alt=\"Anime pic\"\r\n          src=\"https://www.easytutoriel.com/wp-content/uploads/2021/09/fond-d-ecran-anime-windows-11-10-tutoriel-facile.jpg\"\r\n        ></img>\r\n      </div>\r\n      <div className={s.content__user}>\r\n        <div className={s.content__avatar}>\r\n          <img\r\n            width=\"100px\"\r\n            alt=\"Avatar\"\r\n            src={\r\n              props.profile.photos.small\r\n                ? props.profile.photos.small\r\n                : defaultAvatar\r\n            }\r\n          ></img>\r\n        </div>\r\n        <div className={s.content__description}>\r\n          <ul>\r\n            <ProfileStatus\r\n              profile={props.profile}\r\n              status={props.status}\r\n              updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <li>Name: {props.profile.fullName}</li>\r\n            {props.profile.aboutMe && <li>About: {props.profile.aboutMe}</li>}\r\n            {props.profile.lookingForAJobDescription && (\r\n              <li>Description: {props.profile.lookingForAJobDescription}</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className={s.content__posts}>\r\n        <MyPostsContainer store={props.store} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { withMatch } from \"../../HOC/withMatch\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount(){\r\n    let userId = this.props.match \r\n      ? this.props.match.params.userId \r\n      : this.props.authorizedUserId;\r\n    if(!userId) {\r\n      this.props.history.push('/login');\r\n    }\r\n\r\n      this.props.getUserProfile(userId);\r\n      this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props} \r\n            profile={this.props.profile} \r\n            status={this.props.status}\r\n            updateUserStatus={this.props.updateUserStatus}\r\n           /> \r\n          }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId\r\n \r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n  withMatch,\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { useMatch } from \"react-router-dom\";\r\n\r\n\r\nexport const withMatch = (Component) => {\r\n\r\n    const MatchComponent = (props) => {\r\n            \r\n                let match = useMatch('/profile/:userId/');\r\n                return (\r\n                  <Component {...props} match={match}/>\r\n                )\r\n        }\r\n\r\n    return MatchComponent;\r\n}\r\n\r\n"],"names":["props","className","s","src","avatar","alt","message","likesCount","maxLength_150","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","rows","cols","type","postsElements","posts","map","p","formData","addPost","newPostText","connect","state","profilePage","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","toggleEditMode","value","autoFocus","onBlur","updateUserStatus","onChange","ev","target","changeStatus","onDoubleClick","profile","width","photos","small","fullName","aboutMe","lookingForAJobDescription","store","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","React","compose","auth","Component","useMatch","withAuthRedirect"],"sourceRoot":""}